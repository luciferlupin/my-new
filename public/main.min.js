// Combined and minified critical JavaScript
(function() {
  "use strict";
  document.addEventListener("DOMContentLoaded", function() {
    const menuToggle = document.querySelector(".menu-toggle"),
      navbarMenu = document.querySelector(".navbar-menu"),
      navbarLinks = document.querySelectorAll(".navbar-link");

    function toggleMenu() {
      menuToggle.classList.toggle("active");
      navbarMenu.classList.toggle("active");
      document.body.style.overflow = menuToggle.classList.contains("active") ? "hidden" : "";
    }

    function closeMenu() {
      menuToggle.classList.remove("active");
      navbarMenu.classList.remove("active");
      document.body.style.overflow = "";
    }

    menuToggle && menuToggle.addEventListener("click", toggleMenu);
    navbarLinks.forEach(function(link) {
      link.addEventListener("click", closeMenu);
    });

    // Enhanced smooth scrolling for navigation links
    document.querySelectorAll('a[href^="#"]').forEach(function(anchor) {
      anchor.addEventListener("click", function(event) {
        const href = this.getAttribute("href");
        if (href === "#" || href === "#0") return;
        
        event.preventDefault();
        
        const target = document.querySelector(href);
        if (!target) return;
        
        // Get the height of the fixed header
        const header = document.querySelector('.navbar');
        const headerHeight = header ? header.offsetHeight : 100;
        const headerOffset = headerHeight + 20; // Add some extra spacing
        
        // Calculate the target position
        const elementPosition = target.getBoundingClientRect().top;
        const offsetPosition = elementPosition + window.pageYOffset - headerOffset;
        
        // Smooth scroll to the target
        window.scrollTo({
          top: offsetPosition,
          behavior: "smooth"
        });
        
        // Update URL without adding to history
        if (history.pushState) {
          history.pushState(null, null, href);
        } else {
          window.location.hash = href;
        }
      });
    });
  });

  let isScrolled = false;
  function handleScroll() {
    const scrolled = window.scrollY > 200;
    if (scrolled !== isScrolled) {
      isScrolled = scrolled;
      document.body.classList.toggle("scrolled", scrolled);
      document.body.classList.toggle("scrolled-up", scrolled && window.scrollY < this.lastScroll);
    }
  }
  handleScroll();
  window.addEventListener("scroll", handleScroll);

  // Update active navigation link based on scroll position
  function updateNavbar() {
    const sections = Array.from(document.querySelectorAll('section[id]'));
    const scrollPosition = window.scrollY + 100; // 100px offset for header
    
    // Find the current section
    let currentSection = null;
    
    for (const section of sections) {
      const sectionTop = section.offsetTop;
      const sectionHeight = section.offsetHeight;
      
      if (scrollPosition >= sectionTop - 10 && 
          scrollPosition < sectionTop + sectionHeight - 10) {
        currentSection = section.id;
        break;
      }
    }
    
    // If no section found, find the closest one
    if (!currentSection && sections.length > 0) {
      let minDistance = Infinity;
      
      sections.forEach(section => {
        const sectionTop = section.offsetTop;
        const distance = Math.abs(sectionTop - scrollPosition);
        
        if (distance < minDistance) {
          minDistance = distance;
          currentSection = section.id;
        }
      });
    }
    
    // Update active state
    if (currentSection) {
      document.querySelectorAll('.navbar-link').forEach(link => {
        const isActive = link.getAttribute('href') === `#${currentSection}`;
        link.classList.toggle('active', isActive);
      });
      
      // Update URL without triggering scroll
      if (history.replaceState && `#${currentSection}` !== window.location.hash) {
        history.replaceState(null, null, `#${currentSection}`);
      }
    }
  }
  // Initialize page and set up event listeners
  function init() {
    // Set up scroll event with debounce for better performance
    let isScrolling;
    window.addEventListener('scroll', () => {
      window.clearTimeout(isScrolling);
      isScrolling = setTimeout(updateNavbar, 50);
    }, { passive: true });
    
    // Handle initial page load
    if (document.readyState === 'complete') {
      handlePageLoad();
    } else {
      window.addEventListener('load', handlePageLoad);
    }
    
    // Handle hash changes
    window.addEventListener('hashchange', handleHashChange);
    
    // Handle back/forward navigation
    window.addEventListener('popstate', updateNavbar);
  }
  
  function handlePageLoad() {
    // Initial navbar update
    updateNavbar();
    
    // If there's a hash in the URL, scroll to it
    if (window.location.hash) {
      // Small delay to ensure all elements are in place
      setTimeout(() => {
        scrollToSection(window.location.hash);
      }, 100);
    } else {
      // If no hash, ensure we're at the top
      window.scrollTo(0, 0);
    }
  }
  
  function handleHashChange() {
    if (window.location.hash) {
      scrollToSection(window.location.hash);
    }
  }
  
  function scrollToSection(hash) {
    const target = document.querySelector(hash);
    if (!target) return;
    
    const header = document.querySelector('.navbar');
    const headerHeight = header ? header.offsetHeight : 100;
    const offset = headerHeight + 20;
    const targetPosition = target.getBoundingClientRect().top + window.pageYOffset - offset;
    
    window.scrollTo({
      top: targetPosition,
      behavior: 'smooth'
    });
    
    // Update navbar after scroll
    setTimeout(updateNavbar, 300);
  }
  
  // Initialize everything
  init();

  const animateOnScrollElements = document.querySelectorAll(".animate-on-scroll");
  function animateOnScroll() {
    animateOnScrollElements.forEach(function(element) {
      const top = element.getBoundingClientRect().top;
      const windowHeight = window.innerHeight - 100;
      if (top < windowHeight) {
        element.style.opacity = "1";
        element.style.transform = "translateY(0)";
      }
    });
  }
  window.addEventListener("scroll", animateOnScroll);
  window.addEventListener("load", animateOnScroll);

  const faqQuestions = document.querySelectorAll(".faq-question");
  faqQuestions.forEach(function(question) {
    question.addEventListener("click", function() {
      const parent = this.parentNode;
      parent.classList.toggle("active");
      const answer = parent.querySelector(".faq-answer");
      const icon = parent.querySelector("i");
      if (answer.style.maxHeight) {
        answer.style.maxHeight = null;
      } else {
        answer.style.maxHeight = answer.scrollHeight + "px";
        icon.classList.replace("fa-plus", "fa-minus");
      }
    });
  });

  const carouselItems = document.querySelectorAll(".carousel-item"),
    carouselDots = document.querySelectorAll(".carousel-dot");
  let currentSlide = 0;
  function updateCarousel(slide) {
    carouselItems.forEach(function(item, index) {
      item.style.transform = "translateX(" + 100 * (index - slide) + "%)";
    });
    carouselDots.forEach(function(dot, index) {
      dot.classList.toggle("active", index === slide);
    });
  }
  carouselDots.forEach(function(dot, index) {
    dot.addEventListener("click", function() {
      currentSlide = index;
      updateCarousel(currentSlide);
    });
  });
  setInterval(function() {
    currentSlide = (currentSlide + 1) % carouselItems.length;
    updateCarousel(currentSlide);
  }, 5000);

  const pricingToggle = document.querySelectorAll(".pricing-toggle input");
  pricingToggle.forEach(function(input) {
    input.addEventListener("change", function() {
      const period = this.checked ? "annually" : "monthly";
      document.querySelectorAll(".pricing-plan").forEach(function(plan) {
        const price = plan.getAttribute("data-" + period);
        if (price) {
          plan.querySelector(".price").textContent = price;
        }
      });
    });
  });

  const serviceSelect = document.querySelector("select");
  if (serviceSelect) {
    serviceSelect.addEventListener("change", function() {
      const value = this.value;
      document.querySelectorAll(".service-pill").forEach(function(pill) {
        pill.style.display = "none";
      });
      if (value !== "all") {
        document.querySelectorAll(value).forEach(function(pill) {
          pill.style.display = "flex";
        });
      }
    });
  }

  const techStackTracks = document.querySelectorAll(".tech-stack-track");
  if (techStackTracks.length > 0) {
    techStackTracks.forEach(function(track) {
      const icons = track.querySelectorAll(".tech-icon");
      const width = icons.length * 200;
      track.style.width = width + "px";
      track.innerHTML += track.innerHTML;
    });
    setInterval(function() {
      techStackTracks.forEach(function(track) {
        track.style.transition = "none";
        track.style.transform = "translateX(0)";
        setTimeout(function() {
          track.style.transition = "transform 30s linear";
          track.style.transform = "translateX(-" + track.scrollWidth / 2 + "px)";
        });
      });
    }, 100);
  }
})();
